plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.12"
}

group 'com.scndgen'
version '2.170608'

sourceCompatibility = 11
targetCompatibility = 11

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

project.ext.mainClass = 'com.scndgen.legends.ScndGenLegends'
project.ext.lwjglVersion = "3.3.1"

javafx {
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}


repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
}

dependencies {
    implementation 'io.github.subiyacryolite:jds:3.2.2-SNAPSHOT'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.2'
    implementation "org.lwjgl:lwjgl:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    runtimeOnly "org.lwjgl:lwjgl:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl:${lwjglVersion}:natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-linux"
    runtimeOnly "org.lwjgl:lwjgl:${lwjglVersion}:natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-macos"
}

jar {
    manifest {
        attributes(
                "Implementation-Title": rootProject.name,
                "Implementation-Version": project.version,
                "Created-By": "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
                "Main-Class": project.ext.mainClass,
        )
    }
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}