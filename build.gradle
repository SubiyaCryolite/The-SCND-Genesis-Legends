import org.gradle.internal.os.OperatingSystem

plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.13"
}

group 'com.scndgen'
version '24.12.05'

project.ext.mainClass = 'com.scndgen.legends.ScndGenLegends'
project.ext.lwjglVersion = "3.3.4"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

javafx {
    version = "21"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "commons-codec:commons-codec:1.15"
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "commons-io:commons-io:2.11.0"
    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation "com.fasterxml.jackson.core:jackson-core:2.13.4"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.13.4"
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                "Implementation-Title": rootProject.name,
                "Implementation-Version": project.version,
                "Created-By": "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
                "Main-Class": project.ext.mainClass,
        )
    }
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}